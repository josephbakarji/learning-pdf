
TO DO:
    - Setup variable coefficients
        - include conservative coefficients only
    
    - Evaluate errors
        - analyze distribution of errors?

    - print features: write function makeFeatureNames (includes ^{01} -> 1*x)
    - fix plots

    - Add initial condition training examples 
        - require the same discretization (dU, dx, dt)

    - Include integral term in features
    - Test it on simple reaction case: du/dt = ku
    - Implement SINDY

    - split fit_all 
    - Optimize makefeatures function options (too redundant)

Paper:
    - Results:
        - Generalize in time
            - Test on gradually farther portions of time.
            - Now time_general measures error as a function of training set size
        - Coefficient as a funciton of lambda
        - Sensitivity analysis
        - Error as a function of number of terms
        - Generalization tests: error as a function of training/test generality
        - Predictive ability vs. parsimony (as done in lipson's paper)

Issues:
    - Code Issues:
        - Error doesn't change dramatically for a zero closure term.
        - Closure term fluctuates around zero when plotted
        - Error increases with T (training set size) for u0 exponential - Could be due to high nonlinearity at larger times.
        - What's the difference between score and error? 

    - Method:
        - The solution domain should contain the whole PDF to learn better: this could be computationally expensive 
        - A small error in the coefficient will cause a large one when integrated.

Next Steps:
    - Introduce variable coefficients
    - Write in conservative form
    - Learn PDF equations with known operator

Suggested Improvements:
    - Code:
        - Function to get mean_square_error in PDFlearn

    - Method:
        - Compute derivatives analytically for better estimate of accuaracy
        - Learn nonlocal terms (integrals)

Analysis:
    - Analyze difference between RMS error and Score

Code Optimization:
	- Visualization: 
		- Unify 2D plots (plot_flabel and plot_fu, x and t)
		- make global self.slider list and append sliders to it to avoid conflicts


New Ideas:
    - Learn the dynamics (equation) of a kinetic defect f(x, t) in the case of shocks.
    - Learn integrator using neural network.
