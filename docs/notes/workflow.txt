
- MC simulations
	- Input: 
		- case 
		- IC 
		- MCcount
		- solver
		- time
	- Output: u_xtw
		- save to mc_results

- Build KDE
	- Input: 
		- u_txw <- filename
		- metadata
		- bw
		- time
	- Output: f_Uxt
	- save to pdf_results
		- metadata <- inputs, basefile
		- f_Uxt (.npy)

- Learn
	- Input: 
		- f_Uxt 
		- regcoef, etc.
	- Output: coeffs, accuracy, score etc. 
		- save to learning_results

- saveformat: case_mcID_kdeID_learnID.npy (every ID is based on the previous results)
-----------------------

ISSUES:
	- Not learning the exact equations for advection reaction.
	- CDF results are slightly better (?)

TO DO:	
	
	- Learning issue might be coming from the way I'm saving grid: dx = (x[-1]-x[0])/len(xx) NOT = x[2]-x[1] !!

	- fix issue of file not saved when new folder created
	- Write code to display existing data
	- Write code to clear up files that are manually deleted
	- Systematically save filenames with comments in file where experiments and plots can be replicated (In jupyter notebook?)

	- Replicate Simple advection equation

	- Make file with initial conditions



MANAGE DATA:
	-  

COMPILE RESULTS
	- Plot coefficients as a function of reg or other variables (MC etc)
	- Plot accuracy as a function of ref or other variables (MC etc) 



TESTS:

Test cases:
	- Burgers'
	- advection reaction
		- u**2
		- u
		- u(1-u) ?
		- zero
	- linear advection

Results variables (accuracy and score)
	- PDF vs. CDF
	- Function of regularization 
	- Function of MC count 
	- Function of initial distribution
	- Function of dx, dt, du

KDE test variables:
	- getting rid of delta effect
	- u_margin effect
	- normalize effect

Optimization tests:
	- Attempt L2 regularization with known terms